@model IEnumerable<EAMS.View_Models.VacancyDetailsIndxVM>

@{
    ViewBag.Title = "List of Vacancies";
}
<div class="page-body">
    <div class="card">
        <div class="card-header">
            <h5>@ViewBag.Title</h5>
            <div class="card-header-right">
                <a href="@Url.Action("Create", "VacancyMaster")" title="Click here to create a New Vacancy" class="btn btn-success btn-sm"><i class="fa fa-plus"></i></a>
                <a href="@Url.Action("JobOpportunitiesList", "VacancyReports")" title="Click here to Print Vacancy List" class="btn btn-secondary btn-sm"><i class="fa fa-print"></i></a>
                <i class="icofont icofont-rounded-down"></i>
            </div>
        </div>
        <div class="card-block">
            <table class="table table-striped table-bordered w-100" id="myTable">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.CityId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompanyId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.States.StateName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PostName)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.ModeOfApplicationId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.JobFunction)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.VacancyTypeString)
                        </th>
                        <th>
                            @Html.DisplayName("Qualification Essentials")
                        </th>
                        <th>
                            @Html.DisplayName("Qualification Desirable")
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Vacancies)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LevelPost)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.WorkExperience)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AgeMin)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AgeMax)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.JobLocation)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SalaryMin)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SalaryMax)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AdditionalBenefits)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Citys.CityName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Companys.CompanyName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.States.StateName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PostName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModeOfApplication)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.JobFunction)
                            </td>
                            <td>
                                @if (item.VacancyTypeString != null)
                                {
                                    if (item.VacancyTypeString == "C")
                                    {
                                        <text>Contractual</text>
                                    }
                                    else if (item.VacancyTypeString == "P")
                                    {
                                        <text>Permanent</text>
                                    }
                                    else if (item.VacancyTypeString == "PT")
                                    {
                                        <text>Part Time</text>
                                    }
                                }
                            </td>
                            <td>
                                <ul>
                                    @foreach (var qulyftn in item.iQualificationEssentials)
                                    {
                                        <li>@qulyftn.Qualification </li>
                                    }
                                </ul>
                            </td>
                            <td>
                                <ul>
                                    @foreach (var qulyftn in item.iQualificationDesirables)
                                    {
                                        <li>@qulyftn.Qualification </li>
                                    }
                                </ul>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Vacancies)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LevelPost)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.WorkExperience)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AgeMin)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AgeMax)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.JobLocation)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SalaryMin)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SalaryMax)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AdditionalBenefits)
                            </td>
                            <td>
                                <a href="@Url.Action("Edit", "VacancyMaster", new { id = item.VacancyId })"><i class="fa fa-edit"></i></a>
                                <button type="button" class="btn btn-transparent red btn-xs" onclick="Delete(@item.VacancyId, this)"><i class="fa fa-trash"></i></button>
                            </td>
                        </tr>
                    }
                </tbody>


            </table>
        </div>
    </div>
</div>

@section DataTableScript {

    <script>
            LoadJDT('myTable');

            function Delete(id, event) {
                var TableId = "myTable";
                var Jsonurl = "/VacancyMaster/DeleteOnConfirm";
                DeleteJDTRow(id, event, TableId, Jsonurl)
            }
        </script>
}
