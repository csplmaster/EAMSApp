@model EAMS.View_Models.CityMasterVM

@{
    ViewBag.Title = "City/District Create";
}
<div class="page-body">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <h5>@ViewBag.Title</h5>
                    <span>This page is used to Add City and Districts</span>
                    <div class="card-header-right">
                        <i class="icofont icofont-rounded-down"></i>
                        <a href="@Url.Action("Index", "CityMaster")" title="Click here to close this form"><i class="icofont icofont-arrow-left"></i></a>
                    </div>
                </div>
                <div class="card-block">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class='col-sm-4'>
                                <div class='form-group'>
                                    @Html.LabelFor(model => model.StateId, "State Name", htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("StateId", (IEnumerable<SelectListItem>)ViewBag.States, null, htmlAttributes: new { @class = "form-control" })
                                    @*@Html.DropDownListFor(model => model.StateId, new SelectList(ViewBag.States, "Value", "Text"), htmlAttributes: new { @class = "form-control" })*@
                                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <div class='form-group'>
                                    @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <div class='form-group'>
                                    @Html.LabelFor(model => model.CodeName, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CodeName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CodeName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-9 offset-0">
                                <div class="form-group">
                                    <button type="submit" value="Save" class="btn btn-primary m-b-0"><i class="fa fa-save"></i> Save </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
