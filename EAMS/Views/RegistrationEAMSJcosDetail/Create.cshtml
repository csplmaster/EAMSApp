@model EAMS.View_Models.RegEAMSJcoCreate

@{
    ViewBag.Title = "Create JCO/ORs Profile";
}
<div class="page-body">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <h5>@ViewBag.Title</h5>
                    <span>
                        This page is used to Add JCO/ORs Profile
                    </span>
                    <div class="card-header-right">
                        <i class="icofont icofont-rounded-down"></i>
                        <a href="@Url.Action("Index", "RegistrationEAMSJcosDetail")" title="Click here to close this form"><i class="icofont icofont-arrow-left"></i></a>
                    </div>
                </div>
                <div class="card-block">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class='col-sm-2'>
                            <div class='form-group'>
                                @Html.LabelFor(model => model.ServiceType, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.ServiceType, new List<SelectListItem> { new SelectListItem { Text = "Army", Value = "Army" }, new SelectListItem { Text = "Air Force", Value = "AirForce" }, new SelectListItem { Text = "Navy", Value = "Navy" } }, "--Select--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ServiceType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServiceNo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ServiceNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ServiceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RankId, "Rank", htmlAttributes: new { @class = "control-label col-md-2" })
                                @*@Html.DropDownList("RankID", (IEnumerable<SelectListItem>)ViewBag.Rank, null, htmlAttributes: new { @class = "form-control" })*@
                                @Html.DropDownList("RankId", new SelectList(string.Empty, "Value", "Text"), "Select Rank", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RankId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                       
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CorpId, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownList("CorpId", (IEnumerable<SelectListItem>)ViewBag.Corp, null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CorpId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TradeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownList("TradeId", (IEnumerable<SelectListItem>)ViewBag.Trades, null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TradeId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> { new SelectListItem { Text = "Female", Value = "Female" }, new SelectListItem { Text = "Male", Value = "Male" } }, "--Select--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownListFor(model => model.Religion, new List<SelectListItem> { new SelectListItem { Text = "Hindu", Value = "Hindu" }, new SelectListItem { Text = "Muslim", Value = "Muslim" }, new SelectListItem { Text = "Sikh", Value = "Sikh" }, new SelectListItem { Text = "Christian", Value = "Christian" }, new SelectListItem { Text = "Buddhist", Value = "Buddhist" }, new SelectListItem { Text = "Others", Value = "Others" } }, "--Select--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.QualificationId, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownList("QualificationId", (IEnumerable<SelectListItem>)ViewBag.Qualifications, null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.QualificationId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AdditionalQualification, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.AdditionalQualification, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AdditionalQualification, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.MedCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.MedCategory, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MedCategory, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PANNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.PANNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PANNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AadharNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.AadharNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AadharNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.HomeStateId, "State", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownList("HomeStateId", (IEnumerable<SelectListItem>)ViewBag.States, null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HomeStateId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DOR, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.DOR, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DOR, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RetirementOrderNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.RetirementOrderNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RetirementOrderNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LandlineNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.LandlineNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LandlineNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RecordOffice, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.RecordOffice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RecordOffice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class='col-sm-2'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ROfilesPath, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.TextBoxFor(model => model.ROfilesPath, "", new { @type = "file", @name = "files", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ROfilesPath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <!-- <h6 class="sub-title">Tab With Icon</h6> -->
                                <div class="sub-title">Address</div>
                                <!-- Nav tabs -->
                                <ul class="nav nav-tabs md-tabs " role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link active" data-toggle="tab" href="#corres7" role="tab"><i class="icofont icofont-home"></i>Correspondance Address</a>
                                        <div class="slide"></div>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" data-toggle="tab" href="#permanent7" role="tab"><i class="icofont icofont-ui-user "></i>Permanent Address</a>
                                        <div class="slide"></div>
                                    </li>
                                </ul>
                                <!-- Tab panes -->
                                <!-- Tab panes -->
                                <div class="tab-content card-block border-secondary">
                                    <div class="tab-pane active" id="corres7" role="tabpanel">
                                        <table>
                                            <tr>
                                                <td class='form-group col-sm-3'>
                                                    <label for="CAddress" class="control-label"> Address</label>
                                                    @Html.EditorFor(model => model.CAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.CAddress, "", new { @class = "text-danger" })
                                                </td>
                                                <td class='form-group col-sm-2'>
                                                    @Html.LabelFor(model => model.CStateId, "State", htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownList("CStateId", (IEnumerable<SelectListItem>)ViewBag.CStates, null, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CStateId, "", new { @class = "text-danger" })
                                                </td>
                                                <td class='form-group col-sm-2'>
                                                    @Html.LabelFor(model => model.CCityId, "City/Distt", htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownList("CCityId", new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CCityId, "", new { @class = "text-danger" })
                                                </td>
                                                <td class='form-group col-sm-1'>
                                                    <label for="CorrAddPin" class="control-label"> Pin Code</label>
                                                    @Html.EditorFor(model => model.CPin, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.CPin, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>
                                        </table>

                                    </div>
                                    <div class="tab-pane" id="permanent7" role="tabpanel">
                                        <table>
                                            <tr>
                                                <td class='form-group col-sm-3'>
                                                    <label for="PAddress" class="control-label"> Address</label>
                                                    @Html.EditorFor(model => model.PAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.PAddress, "", new { @class = "text-danger" })
                                                </td>

                                                <td class='form-group col-sm-2'>
                                                    <label for="PermAddLine2" class="control-label"> State</label>
                                                    @Html.DropDownList("PStateId", (IEnumerable<SelectListItem>)ViewBag.PStates, null, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.PStateId, "", new { @class = "text-danger" })
                                                </td>
                                                <td class='form-group col-sm-2'>
                                                    @Html.LabelFor(model => model.PCityId, "City/Distt", htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownList("PCityId", new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.PCityId, "", new { @class = "text-danger" })
                                                </td>
                                                <td class='form-group col-sm-2'>
                                                    @Html.LabelFor(model => model.PPin, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    @Html.EditorFor(model => model.PPin, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.PPin, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                               
                            </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" value="Save" class="btn btn-primary m-b-0"><i class="fa fa-save"></i> Save </button>
                                        @*<input type="submit" value="Create" class="btn btn-default" />*@
                                    </div>
                                </div>
                            </div>

                            }

                        </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    $(document).ready(function () {
        $("#CStateId").change(function () {
            $("#CCityId").empty();
            $.ajax({
                type: 'POST',
                //url: '@Url.Action("GetCity","RegistrationEAMSJcosDetail")',
                url:'GetCity',
                dataType: 'json',
                data: { stateid: $("#CStateId").val() },
                success: function (citydata) {
                    $.each(citydata, function (i, cityc) {
                        $("#CCityId").append('<option value="' + cityc.Value + '">' + cityc.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
        $("#PStateId").change(function () {
            $("#PCityId").empty();
            $.ajax({
                type: 'POST',
                //url: '@Url.Action("GetCity1", "RegistrationEAMSJcosDetail")',
                url: 'GetCity',
                dataType: 'json',
                data: { stateid: $("#PStateId").val() },
                success: function (cityP) {
                    $.each(cityP, function (i, city) {
                        $("#PCityId").append('<option value="' + city.Value + '">' + city.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
        $("#ServiceType").change(function () {
            $("#RankId").empty();
            $.ajax({
                type: 'POST',
                //url: '@Url.Action("GetRanks","RegistrationEAMSJcosDetail")',
                url: 'GetRanks',
                dataType: 'json',
                data: { ServiceType: $("#ServiceType").val() },
                success: function (citydata) {
                    $.each(citydata, function (i, ranks) {
                        $("#RankId").append('<option value="' + ranks.Value + '">' + ranks.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve ranks.' + ex);
                }
            });
            return false;
        });

    });
    </script>

}

